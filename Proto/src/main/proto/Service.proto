syntax = "proto3";
option java_multiple_files = true;
package tecnico.sec.grpc;

message Error {
  string message = 3;
  bytes signature = 4;
}

message NonceRequest {
  bytes publicKey = 1;
}
message NonceResponse {
  oneof response {
    Nonce nonce = 1;
    Error error = 2;
  }
}
message Nonce{
  int32 nonce = 1;
}

message OpenAccountRequest {
  bytes publicKey = 1;
  bytes signature = 2;
}
message OpenAccountResponse {
  oneof response{
    OpenAccount openAccount = 1;
    Error error = 2;
  }
}
message OpenAccount{
  bytes signature = 1;
}

message SendAmountRequest {
  bytes publicKeySource = 1;
  bytes publicKeyDestination = 2;
  int32 amount = 3;
  int32 nonce = 4;
  bytes signature = 5;
}
message SendAmountResponse {
  oneof response{
    SendAmount sendAmount = 1;
    Error error = 2;
  }
}
message SendAmount{
  bytes signature = 1;
}

message ReceiveAmountRequest {
  bytes publicKey = 1;
  int32 transactionID = 2;
  bytes signature = 3;
}
message ReceiveAmountResponse {
  oneof response{
    ReceiveAmount receiveAmount = 1;
    Error error = 2;
  }
}
message ReceiveAmount {
  bytes signature = 1;
}

message CheckAccountRequest {
  bytes publicKey = 1;
}
message CheckAccountResponse {
  oneof response{
    CheckAccount checkAccount = 1;
    Error error = 2;
  }
}
message CheckAccount {
  int32 balance = 1;
  repeated Transaction transactions = 2;
  bytes signature = 3;
}

message AuditRequest {
  bytes publicKey = 1;
}
message AuditResponse {
  oneof response{
    Audit audit = 1;
    Error error = 2;
  }
}
message Audit {
  repeated Transaction transactions = 1;
  bytes signature = 2;
}

message UpdateTransactionsRequest {
  repeated Transaction transactions = 1;
  Quorum quorum = 2;
}

message Quorum {
  repeated Server serverMessages = 1;
}

message Server {
  string publicKey = 1;
  bytes signature = 2;
}

message Transaction {
  int32 id = 1;
  bytes sender = 2;
  bytes receiver = 3;
  int32 amount = 4;
  bool accepted = 5;
}

message Ack {
}

service Service {
  rpc getNonce(NonceRequest) returns (NonceResponse);
  rpc openAccount(OpenAccountRequest) returns (OpenAccountResponse);
  rpc sendAmount(SendAmountRequest) returns (SendAmountResponse);
  rpc receiveAmount(ReceiveAmountRequest) returns (ReceiveAmountResponse);
  rpc checkAccount(CheckAccountRequest) returns (CheckAccountResponse);
  rpc updateCheckAccount(CheckAccountRequest) returns (CheckAccountResponse);
  rpc Audit(AuditRequest) returns (AuditResponse);
  rpc updateTransactions(UpdateTransactionsRequest) returns (Ack);
}